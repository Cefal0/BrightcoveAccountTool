<body>
  <div class="main row">
    <div class="column main-code code">
<!-- Document Search Functions START -->
      <h2>Support Docs and Tickets Search</h2>
      <p><strong>JIRA, SalesForce, Support Docs Search</strong></p>
      <fieldset>
        <legend><strong>Inputs</strong></legend>
        <p><strong>Search Term: </strong><input type="text" id="searchTerm" name="searchTerm" size="50"/></p>
        <br>
        <button class="main-button" onclick="supSearch()">Support Docs</button>
        <button class="main-button" onclick="sfSearch()">SalesForce</button>
        <button class="main-button" onclick="jiraSearch()">JIRA</button>

        <!-- Support Docs Search -->
        <script type=text/javascript>
        const supSearch = () => {
          const searchText = document.getElementById("searchTerm").value;
          if(searchText) {
            window.open(`https://support.brightcove.com/search?search=${searchText}`);
          }
          else {
            alert("Search Term Required");
          }
        }
        </script>

        <!-- SalesForce Case Search -->
        <script type=text/javascript>
        const sfSearch = () => {
          const searchText = document.getElementById("searchTerm").value;
          if(searchText) {
            window.open(`https://na20.salesforce.com/_ui/search/ui/UnifiedSearchResults?searchType=2&str=${searchText}`);
          }
          else {
            alert("Search Term Required");
          }
        }
        </script>

        <!-- JIRA Ticket Search -->
        <script type=text/javascript>
        const jiraSearch = () => {
          const searchText = document.getElementById("searchTerm").value;
          if(searchText) {
            window.open(`https://jira.brightcove.com/secure/QuickSearch.jspa?searchString=${searchText}`);
          }
          else {
            alert("Search Term Required");
          }
        }
        </script>
      </fieldset>
<!-- Document Search Functions END -->
      <br><br>
<!-- Account Tasks START -->
      <h2>Wacky and Jackie Pages Account Tasks</h2>
      <p><strong>Common Account Functions</strong></p>
      <fieldset>
        <legend><strong>Inputs</strong></legend>
        <p><strong>Acct ID: &nbsp;&nbsp;</strong><input type="text" id="account" name="account" size="50"/></p>
        <p><strong>Video ID: </strong><input type="text" id="video" name="video" size="50"/></p>
        <br>
        <button class="main-button" onclick="legAccount()">Account Lookup</button>
        <button class="main-button" onclick="legImp()">Impersonate User</button>
        <button class="main-button" onclick="listUsers()">List Users</button>
        <button class="main-button" onclick="legTitle()">Legacy Video Info</button>
        <button class="main-button" onclick="ddTitle()">DD Video Info</button>
        <button class="main-button" onclick="delVideo()">Deleted Videos</button>
        <button class="main-button" onclick="medSharing()">Media Sharing</button>
        <br><br>
        <button class="main-button" onclick="ddAccount()">DD Acct Config</button>
        <button class="main-button" onclick="ddIngest()">DD Ingest Jobs</button>
        <button class="main-button" onclick="audienceConf()">Audience Config</button>
        <button class="main-button" onclick="galleryConf()">Gallery Config</button>
        <button class="main-button" onclick="videoHistory()">Video Dist. History</button>
        <button class="main-button" onclick="bcLiveConf()">BC Live Config</button>
        <button class="main-button" onclick="setiConf()">SETI Config</button>
        <br>

        <!-- Account Lookup Function -->
        <script type="text/javascript">
        const legAccount = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://services.brightcove.com/services/internal/mvc/account/search?term=${acctVariable}&settings=routeIngestRequestsToMannheim`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- Impersonate User Function -->
        <script type="text/javascript">
        const legImp = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://services.brightcove.com/services/internal/mvc/user/search?userQuery=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- List Users Function -->
        <script type="text/javascript">
        const listUsers = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/accounts/account-users?account=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- Legacy List Title Function -->
        <script type="text/javascript">
        const legTitle = () => {
          const videoVariable = document.getElementById("video").value;
          if(videoVariable) {
            window.open(`https://services.brightcove.com/services/internal/browser/listPubVideo.jsp?id=${videoVariable}&SUBMIT=SUBMIT`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- DD List Title Function -->
        <script type="text/javascript">
        const ddTitle = () => {
          const acctVariable = document.getElementById("account").value;
          const videoVariable = document.getElementById("video").value;
          if(acctVariable && videoVariable) {
            window.open(`https://jsp.brightcove.com/catalog/video?accountId=${acctVariable}&videoId=${videoVariable}`);
          }
          else {
            alert("Publisher ID and Video ID Required");
          }
        }
        </script>

        <!-- Deleted Videos Function -->
        <script type="text/javascript">
        const delVideo = () => {
          const acctVariable = document.getElementById("account").value;
          const videoVariable = document.getElementById("video").value;
          if(acctVariable || acctVariable && videoVariable) {
            window.open(`https://jsp.brightcove.com/catalog/video_deleted?accountId=${acctVariable}&videoId=${videoVariable}`);
          }
          else {
            alert("Publisher ID or Publisher and Video ID Required");
          }
        }
        </script>

        <!-- Media Sharing Function -->
        <script type="text/javascript">
        const medSharing = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/catalog/sharing?accountId=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- DD Account Config Function -->
        <script type="text/javascript">
        const ddAccount = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/dynamic-delivery/account-info?accountId=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- DD Ingest Jobs Function -->
        <script type="text/javascript">
        const ddIngest = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/dynamic-delivery/account-ingests?accountId=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- Audience Config Function -->
        <script type="text/javascript">
        const audienceConf = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/audience/accounts?accountId=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- Gallery Config Function -->
        <script type="text/javascript">
        const galleryConf = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/experiences/accounts?accountId=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- Video Distribution History Function -->
        <script type="text/javascript">
        const videoHistory = () => {
          const videoVariable = document.getElementById("video").value;
          if(videoVariable) {
            window.open(`https://jsp.brightcove.com/social/video-history?videoId=${videoVariable}`);
          }
          else {
            alert("Video ID Required");
          }
        }
        </script>

        <!-- BC Live Config Function -->
        <script type="text/javascript">
        const bcLiveConf = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/live/account-details?liveAccountId=${acctVariable}`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>

        <!-- SETI Config Function -->
        <script type="text/javascript">
        const setiConf = () => {
          const acctVariable = document.getElementById("account").value;
          if(acctVariable) {
            window.open(`https://jsp.brightcove.com/seti/account?accountID=${acctVariable}&setiPath=`);
          }
          else {
            alert("Publisher ID Required");
          }
        }
        </script>
      </fieldset>
<!-- Account Tasks END -->

      <br><br>
<!-- Standalone Player Testing START -->
      <h2>Standalone Player Testing</h2>
      <p><strong>Builds Player in New Tab</strong></p>
      <fieldset>
        <legend><strong>Inputs</strong></legend>
        <p><strong>Account ID: </strong><input type="text" id="acctId" name="account" size="50"/></p>
        <p><strong>Player ID: &nbsp;&nbsp;</strong><input type="text" id="playerId" name="player" size="50"/></p>
        <p><strong>Video ID: &nbsp;</strong><input type="text" id="vidId" name="video" size="50"/></p>
        <br>
        <button class="main-button" onclick="iframeLoad()">iFrame Embed</button>
        <button class="main-button" onclick="advancedLoad()">Advanced Embed</button>
        <button class="main-button" onclick="playerConfig()">Player Config</button>

        <!-- iFrame Embed Build -->
        <script type="text/javascript">
        const iframeLoad = () => {
          const acctVariable = document.getElementById("acctId").value;
          const playerVariable = document.getElementById("playerId").value;
          const videoVariable = document.getElementById("vidId").value;
          if(acctVariable && playerVariable && videoVariable) {
            var newWindow = window.open("https://cs1.brightcodes.net/jcefalo/acct_tool/standalone_iframe.html");
            newWindow.document.write(`<iframe src=//players.brightcove.net/${acctVariable}/${playerVariable}_default/index.html?videoId=${videoVariable} allowfullscreen webkitallowfullscreen mozallowfullscreen width=640 height=360></iframe>`);
          }
          else {
            alert("All Fields Are Required");
          }
        }
        </script>

        <!-- Advanced Embed Build -->
        <script type="text/javascript">
        const advancedLoad = () => {
          const acctVariable = document.getElementById("acctId").value;
          const playerVariable = document.getElementById("playerId").value;
          const videoVariable = document.getElementById("vidId").value;
          const videoEmbed = `<video data-video-id=${videoVariable} data-account=${acctVariable} data-player=${playerVariable} data-embed=default data-application-id class=video-js controls width=640 height=360></video>`;
          const scriptEmbed = document.createElement('script');
          scriptEmbed.src=`//players.brightcove.net/${acctVariable}/${playerVariable}_default/index.js`;

          if(acctVariable && playerVariable && videoVariable) {
            var newWindow = window.open("https://cs1.brightcodes.net/jcefalo/acct_tool/standalone_advanced.html");
            newWindow.document.write(videoEmbed);
            newWindow.document.body.appendChild(scriptEmbed);
          }
          else {
            alert("All Fields Are Required");
          }
        }
        </script>

        <!-- Player Config Build -->
        <script type="text/javascript">
        function playerConfig() {
          const acctVariable = document.getElementById("acctId").value;
          const playerVariable = document.getElementById("playerId").value;
          if(acctVariable && playerVariable) {
            var newWindow = window.open(`https://players.brightcove.net/${acctVariable}/${playerVariable}_default/config.json`);
          }
          else {
            alert("Publisher ID & Player ID Required");
          }
        }
        </script>
      </fieldset>
      <br>
    </div>
<!-- Standalone Player Testing END -->
      <br><br>
<!-- Obtain Client Creds token input START -->
    <div class="column main-code code">
      <form id="accessTokenForm">
      <h2>Obtain Bearer Token via Client Credentials</h2>
      <p><strong>Upon Input, Will Return Access Token</strong></p>
      <fieldset>
        <legend><strong>Inputs</strong></legend>
        <p><strong>Client ID: &nbsp;&nbsp;</strong><input id="clientId" type="text" size="65" /></p>
        <p><strong>Client Secret: </strong><input id="clientSecret" type="text" size="65" /></p>
        <br>
        <p><button id="accessTokenButton" class="main-button" type="submit">Get Access Token</button></p>
      </fieldset>
      </form>
<!-- Client Creds token input END -->
      <br>
<!-- Client Creds token output START -->
      <fieldset>
        <legend><strong>Output</strong></legend>
        <h3>Access token</h3>
        <textarea name="accessToken" id="accessToken" class="main-code">Access token will appear here...</textarea>
      </fieldset>
<!-- Client Creds token output END -->

<!-- API SECTION -->
<!-- UNDER CONSTRUCTION -->
      <br><br>
<!-- API Request input START -->
    <form id="apiRequestForm">
      <div class="form-wrapper">
        <h2>Brightcove API Section</h2>
        <p><strong>Make Various API Requests</strong></p>
      <fieldset>
        <legend><strong>Inputs</strong></legend>
          <p><strong>Bearer Token: </strong>
            <input type="text" id="bearer_id" name="bearer_id" size="76"/>
          </p>

          <p id="sideElements"><strong>Request Type: </strong>
            <select name="requestType" id="requestType">
              <option class="defaultWhite" value="" selected>- Select -</option>
              <option class="getRequest getGreen">GET</option>
              <option class="postRequest postBlue">POST</option>
              <option class="putRequest putPurple">PUT</option>
              <option class="patchRequest patchOrange">PATCH</option>
              <option class="delRequest delPink">DELETE</option>
            </select>
          </p>

          <script type="text/javascript">
          function documentReady() {
            var selectedItem = $('#requestType :selected');
            $('#requestType').css('backgroundColor', selectedItem.css('backgroundColor'));
            $('#requestType').change(function() {
              var selectedItem = $(this).find("option:selected");
              $(this).css('backgroundColor', selectedItem.css('backgroundColor'));
            });
          }
          jQuery(document).ready(documentReady);
          </script>

          <p id="sideElements"><strong>API Base: </strong>
            <select name="apiBase" class="pathBase" id="apiBase">
              <option value="" class="any analytics audience cms dynamicIngest ingest inPage playback playerManage policy">Select API Base</option>
              <option value="https://analytics.api.brightcove.com/v1" class="analytics">Analytics</option>
              <option value="https://audience.api.brightcove.com/v1" class="audience">Audience</option>
              <option value="https://cms.api.brightcove.com/v1" class="cms">CMS</option>
              <option value="https://ingest.api.brightcove.com/v1" class="dynamicIngest">Dynamic Ingest</option>
              <option value="https://ingestion.api.brightcove.com/v1" class="ingest">Ingest Profiles</option>
              <option value="https://experiences.api.brightcove.com/v1" class="inPage">In-Page Experiences</option>
              <option value="https://edge.api.brightcove.com/playback/v1" class="playback">Playback</option>
              <option value="https://players.api.brightcove.com/v2" class="playerManage">Player Management</option>
              <option value="https://policy.api.brightcove.com/v1" class="policy">Policy</option>
            </select>
          </p>

          <p id="sideElements"><strong>API Path: </strong>
            <select name="apiPath" class="apiPath" id="apiPath">
              <option value="Any" class="any">Select API Path</option>
            </select>
          </p>

          <select id="pot">
            <!-- Analytics API -->
            <option value="" class="analytics getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/engagement/accounts/{account_id}" class="analytics getRequest">Get Account Engagement</option>
            <option value="/engagement/accounts/{account_id}/players/{player_id}" class="analytics getRequest">Get Player Engagement</option>
            <option value="/engagement/accounts/{account_id}/videos/{video_id}" class="analytics getRequest">Get Video Engagement</option>
            <option value="/data?accounts={account_id}&dimensions=account" class="analytics getRequest">Get Analaytics Report</option>
            <option value="/data/status" class="analytics getRequest">Get Available Date Range</option>
            <option value="/alltime/accounts/{account_id}/videos/{video_id}" class="analytics getRequest">Get Alltime Video Views</option>

            <!-- Audience API -->
            <option value="" class="audience getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/leads" class="audience getRequest">Get Leads</option>
            <option value="/accounts/{account_id}/view_events" class="audience getRequest">Get View Events</option>

            <!-- CMS API -->
            <option value="" class="cms getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/videos" class="cms getRequest">Get Videos</option>
            <option value="/accounts/{account_id}/videos" class="cms postRequest">Create Videos</option>
            <option value="/accounts/{account_id}/counts/videos" class="cms getRequest">Get Video Count</option>
            <option value="/accounts/{account_id}/videos/{video_id}" class="cms getRequest">Get Video by Id or Reference Id</option>
            <option value="/accounts/{account_id}/videos/{video_id}" class="cms delRequest">Delete Video</option>
            <option value="/accounts/{account_id}/videos/{video_id}" class="cms patchRequest">Update Video</option>
            <option value="/accounts/{account_id}/videos/{video_id}/sources" class="cms getRequest">Get Video Sources</option>
            <option value="/accounts/{account_id}/videos/{video_id}/images" class="cms getRequest">Get Video Images</option>
            <option value="/accounts/{account_id}/videos/{video_id}/audio_tracks" class="cms getRequest">Get Video Audio Tracks</option>
            <option value="/accounts/{account_id}/videos/{video_id}/audio_tracks/{audio_track_id}" class="cms getRequest">Get Video Audio Track</option>
            <option value="/accounts/{account_id}/videos/{video_id}/audio_tracks/{audio_track_id}" class="cms patchRequest">Update Video Audio Track</option>
            <option value="/accounts/{account_id}/videos/{video_id}/audio_tracks/{audio_track_id}" class="cms delRequest">Delete Video Audio Track</option>
            <option value="/accounts/{account_id}/videos/{video_id}/digital_master" class="cms getRequest">Get Digiital Master Info</option>
            <option value="/accounts/{account_id}/videos/{video_id}/digital_master" class="cms delRequest">Delete Digital Master</option>
            <option value="/accounts/{account_id}/videos/{video_id}/references" class="cms getRequest">Get Playlists for Video</option>
            <option value="/accounts/{account_id}/videos/{video_id}/references" class="cms delRequest">Remove Video From All Playlists</option>
            <option value="/accounts/{account_id}/videos/{video_id}/ingest_jobs" class="cms getRequest">Get Status of Ingest Jobs</option>
            <option value="/accounts/{account_id}/videos/{video_id}/ingest_jobs/{job_id}" class="cms getRequest">Get Status of Ingest Job</option>
            <option value="/accounts/{account_id}/video_fields" class="cms getRequest">Get Custom Fields</option>
            <option value="/accounts/{account_id}/channels" class="cms getRequest">List Channels</option>
            <option value="/accounts/{account_id}/channels/{channel_name}" class="cms getRequest">Get Channel Details</option>
            <option value="/accounts/{account_id}/channels/{channel_name}" class="cms patchRequest">Update Channel</option>
            <option value="/accounts/{account_id}/channels/{channel_name}/members" class="cms getRequest">List Channel Affiliates</option>
            <option value="/accounts/{account_id}/channels/{channel_name}/members/{affiliate_account_id}" class="cms putRequest">Add Affiliate</option>
            <option value="/accounts/{account_id}/channels/{channel_name}/members/{affiliate_account_id}" class="cms delRequest">Remove Affiliate</option>
            <option value="/accounts/{account_id}/contracts/" class="cms getRequest">Approve Contract</option>
            <option value="/accounts/{account_id}/contracts/" class="cms patchRequest">Approve Contract</option>
            <option value="/accounts/{account_id}/videos/{video_id}/shares" class="cms getRequest">List Shares</option>
            <option value="/accounts/{account_id}/videos/{video_id}/shares" class="cms postRequest">Share Video</option>
            <option value="/accounts/{account_id}/videos/{video_id}/shares/{affiliate_account_id}" class="cms getRequest">Get Share</option>
            <option value="/accounts/{account_id}/videos/{video_id}/shares/{affiliate_account_id}" class="cms delRequest">Unshare Video</option>
            <option value="/accounts/{account_id}/playlists" class="cms getRequest">Get Playlists</option>
            <option value="/accounts/{account_id}/playlists" class="cms postRequest">Create Playlist</option>
            <option value="/accounts/{account_id}/counts/playlists" class="cms getRequest">Get Playlist Count</option>
            <option value="/accounts/{account_id}/playlists/{playlist_id}" class="cms getRequest">Get Playlist By Id</option>
            <option value="/accounts/{account_id}/playlists/{playlist_id}" class="cms patchRequest">Update Playlist</option>
            <option value="/accounts/{account_id}/playlists/{playlist_id}" class="cms delRequest">Delete Playlist</option>
            <option value="/accounts/{account_id}/playlists/{playlist_id}/videos" class="cms getRequest">Get Videos in Playlist</option>
            <option value="/accounts/{account_id}/counts/playlists/{playlist_id}/videos" class="cms getRequest">Get Video Count in Playlist</option>
            <option value="/accounts/{account_id}/folders" class="cms getRequest">Get Folders</option>
            <option value="/accounts/{account_id}/folders" class="cms postRequest">Create Folder</option>
            <option value="/accounts/{account_id}/folders/{folder_id}" class="cms getRequest">Get Folder Information</option>
            <option value="/accounts/{account_id}/folders/{folder_id}" class="cms patchRequest">Update Folder Name</option>
            <option value="/accounts/{account_id}/folders/{folder_id}" class="cms delRequest">Delete Folder</option>
            <option value="/accounts/{account_id}/folders/{folder_id}/videos" class="cms getRequest">Get Videos in Folder</option>
            <option value="/accounts/{account_id}/folders/{folder_id}/videos/{video_id}" class="cms putRequest">Add Video to Folder</option>
            <option value="/accounts/{account_id}/folders/{folder_id}/videos/{video_id}" class="cms delRequest">Remove Video from Folder</option>
            <option value="/accounts/{account_id}/subscriptions" class="cms getRequest">Get Subscriptions List</option>
            <option value="/accounts/{account_id}/subscriptions" class="cms postRequest">Create Subscription</option>
            <option value="/accounts/{account_id}/subscriptions/{subscription_id}" class="cms getRequest">Get Subscription</option>
            <option value="/accounts/{account_id}/subscriptions/{subscription_id}" class="cms delRequest">Delete Subscription</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets" class="cms getRequest">Get Assets</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/dynamic_renditions" class="cms getRequest">Get Dynamic Renditions</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/renditions" class="cms getRequest">Get Rendition List</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/renditions" class="cms postRequest">Add Rendition</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/renditions/{asset_id}" class="cms getRequest">Get Rendition</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/renditions/{asset_id}" class="cms patchRequest">Update Rendition</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/renditions/{asset_id}" class="cms delRequest">Delete Rendition</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/poster" class="cms getRequest">Get Poster List (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/poster" class="cms postRequest">Add Poster (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/poster/{asset_id}" class="cms getRequest">Get Poster (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/poster/{asset_id}" class="cms patchRequest">Update Poster (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/poster/{asset_id}" class="cms delRequest">Delete Poster (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/thumbnail" class="cms getRequest">Get Thumbnail List (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/thumbnail" class="cms postRequest">Add Thumbnail (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/thumbnail/{asset_id}" class="cms getRequest">Get Thumbnail (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/thumbnail/{asset_id}" class="cms patchRequest">Update Thumbnail (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/thumbnail/{asset_id}" class="cms delRequest">Delete Thumbnail (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/caption" class="cms getRequest">Get Caption List (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/caption" class="cms postRequest">Add Caption (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/caption/{asset_id}" class="cms getRequest">Get Caption (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/caption/{asset_id}" class="cms patchRequest">Update Caption (Legacy)</option>
            <option value="/accounts/{account_id}/videos/{video_id}/assets/caption/{asset_id}" class="cms delRequest">Delete Caption (Legacy)</option>
            <option value="" class="cms "></option>

            <!-- Dynamic Ingest API -->
            <option value="" class="dynamicIngest getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/videos/{video_id}/ingest-requests" class="dynamicIngest postRequest">Ingest Videos and Assets</option>
            <option value="/accounts/{account_id}/videos/{video_id}/upload-urls/{source_name}" class="dynamicIngest getRequest">Get Temporary S3 URLs To Upload Videos</option>

            <!-- Ingest API -->
            <option value="" class="ingest getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/configuration" class="ingest getRequest">Get Default Profile</option>
            <option value="/accounts/{account_id}/configuration" class="ingest putRequest">Update Default Profile</option>
            <option value="/accounts/{account_id}/configuration" class="ingest postRequest">Set Default Profile</option>
            <option value="/accounts/{account_id}/profiles" class="ingest getRequest">Get All Ingest Profiles</option>
            <option value="/accounts/{account_id}/profiles" class="ingest postRequest">Create Ingest Profile</option>
            <option value="/accounts/{account_id}/profiles/{profile_id}" class="ingest getRequest">Get Ingest Profile</option>
            <option value="/accounts/{account_id}/profiles/{profile_id}" class="ingest putRequest">Update Ingest Profile</option>
            <option value="/accounts/{account_id}/profiles/{profile_id}" class="ingest delRequest">Delete Ingest Profile</option>

            <!-- In-Page API -->
            <option value="" class="inPage getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/experiences" class="inPage postRequest">Create In-Page Experience</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}" class="inPage getRequest">Get In-Page Experience</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}" class="inPage putRequest">Update In-Page Experience</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}" class="inPage delRequest">Delete In-Page Experience</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}/actions/publish" class="inPage postRequest">Publish In-Page Experience</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}/actions/unpublish" class="inPage postRequest">Unpublish In-Page Experience</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}/actions/duplicate" class="inPage postRequest">Duplicate In-Page Experience</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}/live/status" class="inPage getRequest">Get In-Page Experience Live Status</option>
            <option value="/accounts/{account_id}/experiences/{experience_id}/live/status" class="inPage putRequest">Set In-Page Experience Live Status</option>
            <option value="/accounts/{account_id}/templates" class="inPage getRequest">Get Templates</option>
            <option value="/accounts/{account_id}/templates/{template_id}" class="inPage getRequest">Get Template</option>
            <option value="/accounts/{account_id}/themes" class="inPage getRequest">Get Themes</option>
            <option value="/accounts/{account_id}/themes" class="inPage postRequest">Create Theme</option>
            <option value="/accounts/{account_id}/themes/{theme_id}" class="inPage getRequest">Get Theme</option>
            <option value="/accounts/{account_id}/themes/{theme_id}" class="inPage putRequest">Update Theme</option>
            <option value="/accounts/{account_id}/themes/{theme_id}" class="inPage delRequest">Delete Theme</option>
            <option value="/accounts/{account_id}/fonts" class="inPage getRequest">Get Fonts</option>
            <option value="/accounts/{account_id}/fonts" class="inPage postRequest">Create Font</option>
            <option value="/accounts/{account_id}/fonts/{font_id}" class="inPage getRequest">Get Font</option>
            <option value="/accounts/{account_id}/fonts/{font_id}" class="inPage putRequest">Update Font</option>
            <option value="/accounts/{account_id}/fonts/{font_id}" class="inPage delRequest">Delete Font</option>

            <!-- Playback API -->
            <option value="" class="playback getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/playlists/{playlist_id}" class="playback getRequest">Get Playlist By Id Or Reference Id</option>
            <option value="/accounts/{account_id}/videos/{video_id}/related" class="playback getRequest">Get Related Videos By Id Or Reference Id</option>
            <option value="/accounts/{account_id}/videos/{video_id}" class="playback getRequest">Get Video By Id Or Reference Id</option>
            <option value="/accounts/{account_id}/videos" class="playback getRequest">Get Videos</option>

            <!-- Player Management API -->
            <option value="" class="playerManage getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/players" class="playerManage getRequest">Get A List Of Players</option>
            <option value="/accounts/{account_id}/players" class="playerManage postRequest">Create A Player</option>
            <option value="/accounts/{account_id}/players/{player_id}" class="playerManage getRequest">Get A Single Player</option>
            <option value="/accounts/{account_id}/players/{player_id}" class="playerManage patchRequest">Update A Player By Id</option>
            <option value="/accounts/{account_id}/players/{player_id}" class="playerManage delRequest">Delete A Player By Id</option>
            <option value="/accounts/{account_id}/players/{player_id}/publish" class="playerManage postRequest">Publish A Player</option>
            <option value="/accounts/{account_id}/players/{player_id}/configuration/{branch}" class="playerManage getRequest">Get Player Configuration</option>
            <option value="/accounts/{account_id}/players/{player_id}/configuration" class="playerManage patchRequest">Update Player Configuation</option>
            <option value="/plugins" class="playerManage getRequest">Get All Plugins</option>
            <option value="/plugins/{plugin_id}" class="playerManage getRequest">Get A Single Plugin</option>
            <option value="/accounts/{account_id}/players/{player_id}/embeds" class="playerManage getRequest">Get All The Embeds For A Player</option>
            <option value="/accounts/{account_id}/players/{player_id}/embeds" class="playerManage postRequest">Create An Embed</option>
            <option value="/accounts/{account_id}/players/{player_id}/embeds/{embed_id}" class="playerManage getRequest">Get A Specific Embed For A Player</option>
            <option value="/accounts/{account_id}/players/{player_id}/embeds/{embed_id}" class="playerManage delRequest">Delete An Embed</option>
            <option value="/accounts/{account_id}/players/{player_id}/embeds/{embed_id}/configuration/{branch}" class="playerManage getRequest">Get Player Embed Configuration</option>
            <option value="/accounts/{account_id}/players/{player_id}/embeds/{embed_id}/configuration/" class="playerManage patchRequest">Update Embed Configuration</option>
            <option value="/accounts/:account_id/players/:player_id/embeds/:embedID/configuration/merged" class="playerManage getRequest">Get Configuration Combinations</option>

            <!-- Policy API -->
            <option value="" class="policy getRequest postRequest putRequest patchRequest delRequest">Select API Path</option>
            <option value="/accounts/{account_id}/policy_keys" class="policy postRequest">Create A Policy Key</option>
            <option value="/accounts/{account_id}/policy_keys/{key_string}" class="policy getRequest">Get Policy</option>
          </select>

          <p><strong>API Request: </strong></p>
            <textarea id="apiRequest" name="apiRequest" class="main-code"></textarea>
          <p><strong>Call Body (JSON, Optional): <strong></p>
            <textarea name="apiBody" id="apiBody" class="main-code"></textarea>
          <br><br>
          <p><button id="apiRequestButton" class="main-button" type="submit">Submit Request</button></p>
        </fieldset>
      </form>

      <!-- Script to change/append API Base & Path URL to TextArea (apiRequest)-->
      <script type="text/javascript">
      $(function() {
        $("#apiBase").change(function() {
          var $select = $(this);
          $("#apiRequest").val(function() {
            var baseURL = $(this).prop('defaultValue') + $select.val();
            console.log($(this).prop('defaultValue') + $select.val());
            $(".apiPath").change(function() {
              var $select = $(this);
              $("#apiRequest").val(function() {
                var pathURL = $(this).prop('defaultValue') + $select.val();
                console.log($(this).prop('defaultValue') + $select.val());
                var fullRequest = baseURL + pathURL;
                return fullRequest;
              });
            });
          });
        });
      });
      </script>

      <!-- Script to change show API Path depending on API Base -->
      <script type="text/javascript">
      $('#requestType').change(function() {
        var select_class_type = $("option:selected", this).attr("class").split(' ')[0];
        console.log(select_class_type);
        // clone all options from the pot select
        var $options_type = $('#pot > option.'+select_class_type);
        // console.log($options_type);
        // delete all of the options in the township select and append
        // the new options
        $('#apiBase')
        .find()
        .remove()
        .end();

      $('#apiBase').change(function() {
      // get the class of the selected option
        var select_class_base = $("option:selected", this).attr("class");
        console.log(select_class_base);
        // clone all options from the pot select
        var $options_base = $('#pot > option.'+select_class_base).clone();
        // console.log($options_base);

        var $options_type_get = $($options_base).hasClass("getRequest");
        var $options_type_post = $($options_base).hasClass("postRequest");
        var $options_type_put = $($options_base).hasClass("putRequest");
        var $options_type_patch = $($options_base).hasClass("patchRequest");
        var $options_type_del = $($options_base).hasClass("delRequest");


        var $checkGetReq = $($options_base).filter(".getRequest");
        var $checkPostReq = $($options_base).filter(".postRequest");
        var $checkPutReq = $($options_base).filter(".putRequest");
        var $checkPatchReq = $($options_base).filter(".patchRequest");
        var $checkDelReq = $($options_base).filter(".delRequest");

        // delete all of the options in the apiBase select and append
        // the new options
        if($options_type_get == true && select_class_type == "getRequest") {
          $('#apiPath')
          .find()
          .remove()
          .end()
          .empty()
          .append($checkGetReq);
          $("#requestType").on("click", function () {
            $('#apiBase').prop('selectedIndex',0);
            $('#apiPath').prop('selectedIndex',0);
          });
        }
        else if($options_type_post == true && select_class_type == "postRequest") {
          $('#apiPath')
          .find()
          .remove()
          .end()
          .empty()
          .append($checkPostReq);
          $("#requestType").on("click", function () {
            $('#apiBase').prop('selectedIndex',0);
            $('#apiPath').prop('selectedIndex',0);
          });
        }
        else if($options_type_put == true && select_class_type == "putRequest") {
          $('#apiPath')
          .find()
          .remove()
          .end()
          .empty()
          .append($checkPutReq);
          $("#requestType").on("click", function () {
            $('#apiBase').prop('selectedIndex',0);
            $('#apiPath').prop('selectedIndex',0);
          });
        }
        else if($options_type_patch == true && select_class_type == "patchRequest") {
          $('#apiPath')
          .find()
          .remove()
          .end()
          .empty()
          .append($checkPatchReq);
          $("#requestType").on("click", function () {
            $('#apiBase').prop('selectedIndex',0);
            $('#apiPath').prop('selectedIndex',0);
          });
        }
        else {
          $('#apiPath')
          .find()
          .remove()
          .end()
          .empty()
          .append($checkDelReq);
          $("#requestType").on("click", function () {
            $('#apiBase').prop('selectedIndex',0);
            $('#apiPath').prop('selectedIndex',0);
          });
        }
        });
      });
    </script>

<!-- API Request input END -->
        <br>
<!-- API Request output START -->
        <fieldset>
          <legend><strong>Output</strong></legend>
          <p><strong>Response Staus Code: </strong>
            <textarea type="text" id="response_status" name="response_status" rows="1" cols="6" readonly style="resize: none; margin-bottom: -5px;"></textarea>
          </p>
          <textarea name="apiResponse" id="apiResponse" class="main-code" style="width: 1031px; height:250px;">JSON Response will appear here...</textarea>
          <br>
        </fieldset>
        <br>
      </div>
<!-- API Request output END -->
    </div>
  </div>
    <br><br>
    <style>
</body>
